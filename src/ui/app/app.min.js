var app=angular.module("app",["ngRoute","ngResource","ui.bootstrap"]).config(function($routeProvider,$httpProvider){$routeProvider.when("/",{templateUrl:"/app/templates.min/Home.html",controller:"HomeController"}),$routeProvider.when("/Pokemon/:id",{templateUrl:"/app/templates.min/Pokemon.html",controller:"PokemonController"}),$routeProvider.when("/Generation/:id",{templateUrl:"/app/templates.min/Generation.html",controller:"GenerationController"}),$routeProvider.when("/Generations",{templateUrl:"/app/templates.min/Generations.html",controller:"GenerationsController"}),$routeProvider.when("/Evolutions/:id",{templateUrl:"/app/templates.min/Evolutions.html",controller:"EvolutionsController"})}).run(function(){});$(document).on("click",".navbar-collapse.in",function(e){$(e.target).is("a")&&$(this).collapse("hide")}),app.service("ApiClientService",function($resource,$http){function ajaxGetCall(url){return $resource(url,{}).get().$promise}function ajaxQueryCall(url){return $resource(url,{}).query().$promise}return{listSpecies:function(){return ajaxQueryCall("/api/species/list")},getSpecies:function(id){return ajaxGetCall("/api/species/"+encodeURIComponent(id))},getPokemon:function(id){return ajaxGetCall("/api/pokemon/"+encodeURIComponent(id))},listPokemonAttackerTypes:function(id){return ajaxQueryCall("/api/pokemon/"+encodeURIComponent(id)+"/attacks")},listPokemonMoves:function(id){return ajaxQueryCall("/api/pokemon/"+encodeURIComponent(id)+"/moves")},listPokemonAttackers:function(id,effectiveness,limit){var url="/api/pokemon/"+encodeURIComponent(id)+"/attackers";return effectiveness&&effectiveness>0&&(url+=url.indexOf("?")<0?"?":"&",url+="effectiveness="+encodeURIComponent(effectiveness)),limit&&limit>0&&(url+=url.indexOf("?")<0?"?":"&",url+="limit="+encodeURIComponent(limit)),ajaxQueryCall(url)},listPokemonEvolutions:function(id){return ajaxQueryCall("/api/pokemon/"+encodeURIComponent(id)+"/evolutions")},listGenerations:function(){return ajaxQueryCall("/api/generations")},getGeneration:function(id){return ajaxGetCall("/api/generation/"+encodeURIComponent(id))},listGenerationEvolutions:function(id){return ajaxQueryCall("/api/generation/"+encodeURIComponent(id)+"/evolutions")},listGenerationInsideEvolutions:function(id){return ajaxQueryCall("/api/generation/"+encodeURIComponent(id)+"/evolutions/inside")},listGenerationOutsideEvolutions:function(id){return ajaxQueryCall("/api/generation/"+encodeURIComponent(id)+"/evolutions/outside")},listGenerationSpecies:function(id){return ajaxGetCall("/api/generation/"+encodeURIComponent(id)+"/species")},listRegions:function(){return ajaxQueryCall("/api/regions")},getRegion:function(id){return ajaxQueryCall("/api/region/"+encodeURIComponent(id))}}}),app.controller("EvolutionsController",function($scope,ApiClientService,$location,$routeParams,$window){$scope.genId=$routeParams.id?$routeParams.id:"",$scope.data={evolutions:[]};var genNumber=$scope.genId;ApiClientService.listGenerationEvolutions(genNumber).then(function(evolutions){$scope.data.evolutions=evolutions}).catch(function(e){}),$scope.viewPokemon=function(id){$location.path("/Pokemon/"+encodeURIComponent(id)),$window.scrollTo(0,0)}}),app.controller("GenerationController",function($scope,ApiClientService,$location,$routeParams,$window){$scope.genId=$routeParams.id?$routeParams.id:"",$scope.data={generation:{}};var genNumber=$scope.genId;ApiClientService.listGenerationSpecies(genNumber).then(function(generation){$scope.data.generation=generation}).catch(function(e){}),$scope.viewPokemon=function(id){$location.path("/Pokemon/"+encodeURIComponent(id)),$window.scrollTo(0,0)}}),app.controller("GenerationsController",function($scope,ApiClientService,$location,$routeParams,$window){$scope.data={generations:[]},ApiClientService.listGenerations().then(function(gens){$scope.data.generations=gens}).catch(function(e){}),$scope.viewGeneration=function(id){$location.path("/Generation/"+encodeURIComponent(id)),$window.scrollTo(0,0)},$scope.viewEvolutions=function(id){$location.path("/Evolutions/"+encodeURIComponent(id)),$window.scrollTo(0,0)}}),app.controller("HomeController",function($scope,ApiClientService,$location,$window){$scope.data={wait:!0,species:[],query:"",dexid:""},$scope.selected=void 0,ApiClientService.listSpecies().then(function(species){$scope.data.species=species,$scope.data.wait=!1}).catch(function(e){}),$scope.performSearch=function(){var dexid=$scope.data.dexid;$scope.selected&&$scope.selected.id&&(dexid=$scope.selected.id),""!=dexid&&($location.path("/Pokemon/"+encodeURIComponent(dexid)),$window.scrollTo(0,0))},$scope.performClear=function(){$scope.data.query="",$scope.data.dexid="",$scope.selected=void 0}}),app.controller("NavbarController",function($scope,$location){$scope.page="home",$scope.goHome=function(){return $scope.page="home",$location.path("/"),!1},$scope.goGenerations=function(){return $scope.page="gens",$location.path("/Generations"),!1}}),app.controller("PokemonController",function($scope,ApiClientService,$location,$routeParams,$q,$window){var handleNetErr=function(e){return e};$scope.pokemonId=$routeParams.id?$routeParams.id:"";var pogoId=$scope.pokemonId;$q.defer();$q.all([ApiClientService.getSpecies(pogoId).then(function(res){return{type:"species",data:res}}),ApiClientService.listPokemonEvolutions(pogoId).catch(handleNetErr).then(function(res){return{type:"evolutions",data:res}}),ApiClientService.listPokemonAttackerTypes(pogoId).catch(handleNetErr).then(function(res){return{type:"attacks",data:res}})]).then(function(data){for(var result={species:null,pokemon:null,evolutions:null,attacks:null},i=0;i<data.length;i++){var row=data[i];if(null==row.data.status)switch(row.type){case"species":result.species=row.data.species,row.data.pokemon&&row.data.pokemon.length>0&&(result.pokemon=row.data.pokemon[0]);break;case"evolutions":result.evolutions=row.data;break;case"attacks":result.attacks=function(attacks){var result={cols:null,rows:[],data:[]};return _.each(_.groupBy(attacks,"attackType"),function(row){null==result.cols&&(result.cols=[],_.each(row,function(cell){result.cols.push(cell.defenseType)})),result.data.push(new Array(result.cols.length)),result.rows.push(row[0].attackType)}),result.cols=result.cols.sort(),result.rows=result.rows.sort(),_.each(_.groupBy(attacks,"attackType"),function(row){var rowIndex=result.rows.indexOf(row[0].attackType);_.each(row,function(cell){var colIndex=result.cols.indexOf(cell.defenseType),bgcolor="#ffffff",fgcolor="#000000";switch(cell.effectiveness){case"2":bgcolor="#00ff00";break;case"1":bgcolor="#0000ff",fgcolor="#ffffff";break;case"0.5":bgcolor="#ff0000"}result.data[rowIndex][colIndex]={bgcolor:bgcolor,fgcolor:fgcolor,effectiveness:100*parseFloat(cell.effectiveness)}}),result.rows[rowIndex]=[result.rows[rowIndex]].concat(result.data[rowIndex])}),result.data=null,result}(row.data)}}$scope.data=result}),$scope.viewPokemon=function(id){$location.path("/Pokemon/"+encodeURIComponent(id)),$window.scrollTo(0,0)}});